name: Build and Test project using dotnet

on: [push, pull_request]
env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

concurrency:
   group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}-${{ github.actor }}
   cancel-in-progress: true

jobs:
  build-test-coveralls:
    
    strategy:
      matrix:
        dotnet-version: [ '8.0.x' ]
        os: [ ubuntu-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4.1.7
        with:
          submodules: 'recursive'
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal

      - name: Test using Coverlet Code Coverage
        run: |
              dotnet test --configuration Release --collect:"XPlat Code Coverage" /p:excludebyfile="Maxisoft.Utils/*" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=json,cobertura,lcov,teamcity,opencover
              cp Cryptodd.Tests/TestResults/*/coverage.info Cryptodd.Tests/TestResults/coverage.info
        timeout-minutes: 10

      - name: Upload Code Coverage to Coveralls
        if: success() && ${{ matrix.os }} == "ubuntu-latest"
        uses: coverallsapp/github-action@v2.3.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN }} 
          path-to-lcov: Cryptodd.Tests/TestResults/coverage.info

      - name: Create artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Cryptodd_${{ matrix.os }}_${{ matrix.dotnet-version }}
          path: Cryptodd.Console/bin/Release/*
